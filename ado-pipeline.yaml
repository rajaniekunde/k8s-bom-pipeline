trigger:
  - main

pool:
  name: aks-pipeline-agent

stages:
- stage: Kubernetes_BoM
  jobs:
  - job: Generate_BoM
    steps:
    
    - task: AzureCLI@2
      displayName: "Authenticate with AKS"
      inputs:
        azureSubscription: "64002c0f-699d-400d-93d2-a40ec1226bcd"
        scriptType: "bash"
        scriptLocation: "inlineScript"
        inlineScript: |
          echo "Logging into Azure..."
          az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
          echo "Fetching AKS credentials..."
          az aks get-credentials --resource-group "myResourceGroup" --name "myAKSCluster" --overwrite-existing
          kubectl cluster-info

    - script: |
        echo "Fetching Kubernetes Cluster Details..."
        kubectl cluster-info > cluster_info.txt
        kubectl get nodes -o json > nodes.json
        kubectl get pods -A -o json > pods.json
        kubectl get deployments -A -o json > deployments.json
        kubectl get services -A -o json > services.json
        kubectl get configmaps -A -o json > configmaps.json
        kubectl get secrets -A -o json > secrets.json
        kubectl get ingresses -A -o json > ingresses.json
        kubectl get daemonsets -A -o json > daemonsets.json
        kubectl get statefulsets -A -o json > statefulsets.json

        echo "Fetching Container Images Used in the Cluster..."
        kubectl get pods -A -o json | jq '[.items[] | {namespace: .metadata.namespace, pod: .metadata.name, containers: [.spec.containers[].image]}]' > container_images.json

        echo "Combining BoM..."
        jq -s '{cluster_info: .[0], nodes: .[1], pods: .[2], deployments: .[3], services: .[4], configmaps: .[5], secrets: .[6], ingresses: .[7], daemonsets: .[8], statefulsets: .[9], container_images: .[10]}' \
          cluster_info.txt nodes.json pods.json deployments.json services.json configmaps.json secrets.json ingresses.json daemonsets.json statefulsets.json container_images.json > k8s_bom.json

    - task: PublishBuildArtifacts@1
      displayName: "Publish Kubernetes BoM"
      inputs:
        pathToPublish: 'k8s_bom.json'
        artifactName: 'KubernetesBoM'
