trigger:
- main  # Run pipeline on changes to main branch

pool:
  vmImage: 'ubuntu-latest'  # Use Linux agent

variables:
  KUBECONFIG: $(Pipeline.Workspace)/config  # Set Kubernetes config path
  OUTPUT_DIR: $(Pipeline.Workspace)/bom  # Directory to store BoM

stages:
- stage: Collect_BOM
  displayName: "Collect Kubernetes Bill of Materials"
  jobs:
  - job: FetchBOM
    displayName: "Fetch Kubernetes Info"
    steps:

    - task: AzureCLI@2
      displayName: "Login to Azure"
      inputs:
        azureSubscription: 'Your-Azure-Service-Connection'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az aks get-credentials --resource-group YOUR_RESOURCE_GROUP --name YOUR_AKS_CLUSTER --file $(KUBECONFIG)
          echo "Kubeconfig set up!"

    - script: |
        mkdir -p $(OUTPUT_DIR)
        echo "Fetching cluster information..."
        kubectl cluster-info > $(OUTPUT_DIR)/cluster-info.txt
        kubectl get nodes -o json > $(OUTPUT_DIR)/nodes.json
        kubectl get namespaces -o json > $(OUTPUT_DIR)/namespaces.json
        kubectl get deployments --all-namespaces -o json > $(OUTPUT_DIR)/deployments.json
        kubectl get services --all-namespaces -o json > $(OUTPUT_DIR)/services.json
        kubectl get configmaps --all-namespaces -o json > $(OUTPUT_DIR)/configmaps.json
        kubectl get secrets --all-namespaces -o json > $(OUTPUT_DIR)/secrets.json
        helm list --all-namespaces -o json > $(OUTPUT_DIR)/helm-charts.json || echo "No Helm charts found."
      displayName: "Collect Kubernetes Details"

    - task: PublishBuildArtifacts@1
      displayName: "Publish Bill of Materials"
      inputs:
        pathToPublish: $(OUTPUT_DIR)
        artifactName: bom-files
